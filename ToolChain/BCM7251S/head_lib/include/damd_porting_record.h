/*************************************************************************
                             All Rights Reserved
                                 R&D Dept.
*************************************************************************/


/*************************************************************************

Filename:       damd_porting_record.h

Description:    

Author:         

Date:           

Modify Log:      
 ------------------------------------------------------------------------
1.
 修改人  :                           
 修改时间:
 修改原因:
 修改方法:
 ------------------------------------------------------------------------
2.
 修改人  :                           
 修改时间:
 修改原因:
 修改方法:
 ------------------------------------------------------------------------
*************************************************************************/
#ifndef _WSD_AL_RECORD_H_
#define _WSD_AL_RECORD_H_

#ifdef __cplusplus
extern "C" {
#endif

/***********************************************************************
*                                包含头文件
************************************************************************/


/***********************************************************************
*                                常量定义
***********************************************************************/
/******************************************************************
描述: 录音类型定义

成员:
	WSD_AL_REC_LINE_IN_E: 录制LINE IN 数据
	
	WSD_AL_REC_MIC1_E: 录制MIC1 数据

	WSD_AL_REC_MIC2_E: 录制MIC2 数据

	WSD_AL_REC_MIC1_2_E: 录制MIC1+MIC2数据

注意: 
******************************************************************/
typedef enum _wsd_al_rec_type_e_
{
	WSD_AL_REC_LINE_IN_E=0,  /** 录制LINE IN 数据 **/
	WSD_AL_REC_MIC1_E,       /** 录制MIC1 数据(左、右声道相同)    **/
	WSD_AL_REC_MIC2_E,	     /** 录制MIC2 数据(左、右声道相同)    **/
	WSD_AL_REC_MIC1_2_E,     /** 录制MIC1(左声道)+MIC2数据(右声道)**/
	WSD_AL_REC_MIC1_MUSIC_E, /** 录制MIC1(左声道)+音乐数据(右声道)**/
	WSD_AL_REC_MIC2_MUSIC_E /** 录制MIC2(左声道)+音乐数据(右声道)**/
}WSD_AL_REC_TYPE_E;


/******************************************************************
描述: 录音声道定义

成员:
	WSD_AL_REC_CHANNEL_LEFT_E: 左声道
	
	WSD_AL_REC_CHANNEL_RIGHT_E: 右声道

	WSD_AL_REC_CHANNEL_LEFT_RIGHT_E: 左右声道

注意: 
******************************************************************/
typedef enum _wsd_al_rec_channel_e_
{
	WSD_AL_REC_CHANNEL_LEFT_E = 0,
	WSD_AL_REC_CHANNEL_RIGHT_E,	
	WSD_AL_REC_CHANNEL_LEFT_RIGHT_E
}WSD_AL_REC_CHANNEL_E;


/***********************************************************************
*                                全局宏定义
***********************************************************************/
/******************************************************************
描  述: 录音数据回调函数定义

参  数:
	pData(in)  : 录音数据
	DataLen(in): 数据长度
    	
返回值: 
    D_SUCCESS: 成功
    D_FAILURE: 失败

注  意:
******************************************************************/
typedef D_INT32 (*WSD_AL_REC_NOTIFY)(void *context, D_INT8 *pData, D_INT32 DataLen);

/***********************************************************************
*                                全局数据结构定义
***********************************************************************/


/***********************************************************************
*                                导出函数
***********************************************************************/

/******************************************************************
函数原型: WSD_AL_RECORD_Init

功能描述: 录音初始化程序

参	  数: 无

返 回 值:  
	D_SUCCESS: 成功
	D_FAILURE: 失败
	
注	  意: 
******************************************************************/
D_INT32 WSD_AL_RECORD_Init(D_VOID);


/******************************************************************
函数原型: WSD_AL_RECORD_Start

功能描述: 开始录音

参	  数: 
    pParam(in): 录音参数，具体信息见WSD_AL_REC_PARAM_T结构

返 回 值:  
	D_SUCCESS: 成功
	D_FAILURE: 失败
	
注	  意: 
    如果pFileName和pNotify同时指定了，数据送给应用的同时 ，会存储到指定文件
******************************************************************/
D_INT32 WSD_AL_RECORD_Start(
    WSD_AL_REC_TYPE_E eRecType,
	D_BOOL bRecordUtilPlaybackStart);

/******************************************************************
函数原型: WSD_AL_RECORD_Stop

功能描述: 停止录音

参	  数: 无

返 回 值:  
	D_SUCCESS: 成功
	D_FAILURE: 失败
	
注	  意: 
******************************************************************/
D_INT32 WSD_AL_RECORD_Stop(D_VOID);


/******************************************************************
函数原型: WSD_AL_RECORD_SetVolume

功能描述: 录音音量设置

参	  数: 
    Channel(in): 声道信息,取值见WSD_AL_REC_CHANNEL_E定义
    Volume(in) : 音量值,取值范围【0, 29】

返 回 值:  
	D_SUCCESS: 成功
	D_FAILURE: 失败
	
注	  意: 
******************************************************************/
D_INT32 WSD_AL_RECORD_SetVolume(WSD_AL_REC_CHANNEL_E Channel, D_INT32 Volume);


/******************************************************************
函数原型: WSD_AL_RECORD_SetVolumeNew

功能描述: 录音音量设置

参	  数: 
    Channel(in): 声道信息,取值见WSD_AL_REC_CHANNEL_E定义
    Volume(in) : 音量值,范围【0, 127】,-17.625db~30db,每步0.375db

返 回 值:  
	D_SUCCESS: 成功
	D_FAILURE: 失败
	
注	  意: 
******************************************************************/
D_INT32 WSD_AL_RECORD_SetVolumeNew(WSD_AL_REC_CHANNEL_E Channel, D_INT32 Volume);


/******************************************************************
函数原型: WSD_AL_RECORD_SetMute

功能描述: 录音静音设置

参	  数: 
    Channel(in): 声道信息,取值见WSD_AL_REC_CHANNEL_E定义
    bMute(in)  : 静音状态，D_FALSE表示取消静音,D_TRUE表示打开静音

返 回 值:  
	D_SUCCESS: 成功
	D_FAILURE: 失败
	
注	  意: 
******************************************************************/
D_INT32 WSD_AL_RECORD_SetMute(WSD_AL_REC_CHANNEL_E Channel, D_BOOL bMute);


/******************************************************************
函数原型: WSD_AL_RECORD_SetFilter

功能描述: 录音滤波功能控制(ADC High Pass Filter)

参	  数: 
    Open(in) : 开关状态，D_FALSE表示关闭滤波功能,D_TRUE表示打开滤波功能

返 回 值:  
	D_SUCCESS: 成功
	D_FAILURE: 失败
	
注	  意: 
    ADC High Pass Filter is Remove DC offsets
******************************************************************/
D_INT32 WSD_AL_RECORD_SetFilter(D_BOOL bOpen);


/******************************************************************
函数原型: WSD_AL_RECORD_Set_SleepTime

功能描述: 设置NEXUS_AudioCapture_GetBuffer前后间隔时间

参	  数: 
                     SleepTime(in) : sleep时间,单位us

返 回 值:  
	          D_SUCCESS: 成功
	          D_FAILURE: 失败
	
注	  意: 
             设置capture_callback中NEXUS_AudioCapture_GetBuffer时间。
******************************************************************/
D_INT32 WSD_AL_RECORD_Set_SleepTime(D_INT32 SleepTime);

int WSD_AL_RECORD_GetBuffer(char ** pbuf, int* p);

int WSD_AL_RECORD_ReadComplete(int nSize);

/******************************************************************
函数原型: WSD_AL_RECORD_Output_Start

功能描述: 录音初始化程序

参	  数: 无

返 回 值:  
	D_SUCCESS: 成功
	D_FAILURE: 失败
	
注	  意: 
******************************************************************/
D_INT32 WSD_AL_RECORD_Output_Start(D_VOID);

/******************************************************************
函数原型: WSD_AL_RECORD_Output_Stop

功能描述: 录音初始化程序

参	  数: 无

返 回 值:  
	D_SUCCESS: 成功
	D_FAILURE: 失败
	
注	  意: 
******************************************************************/
D_INT32 WSD_AL_RECORD_Output_Stop(D_VOID);



#ifdef __cplusplus
}
#endif

#endif
